// Grid

// Pattern variables
$breakpoints:  (
    mobile: 320px,
    mobile-large: 480px, 
    tablet-large: 940px
);

$columns:  (
    mobile: 1,
    mobile-large: 6,
    tablet-large: 12
);

$gutters: (
    mobile: 0,
    mobile-large: 1 / 2,
    tablet-large: 3 / 4
);

$adaptive: false;

.grid {
    box-sizing: border-box;
    margin: 0 auto;
    max-width: $max-content-width + (2*$grid-outer-padding--tablet);

    &__row {
        @include break;
        @include clearfix;
        padding: 0 $grid-outer-padding;

        @include breakpoint($tablet) {
            padding: 0 $grid-outer-padding--tablet;
        }

        @include breakpoint($tablet-large) {
            padding: 0 $grid-outer-padding--tablet-large;
        }

        @include breakpoint($desktop) {
            padding: 0 $grid-outer-padding--desktop;
        }

        .grid__row {
            padding: 0; // reset padding for nested grids
        }
    }

    @each $breakpoint, $width in $breakpoints {

        @include breakpoint($width) {

            $col-no: map-get($columns, $breakpoint);
            $gutter-width: map-get($gutters, $breakpoint);

            @include layout(layout($col-no $gutter-width));

            @if $adaptive {
                width: map-get($grid-container-width, $breakpoint);
            }

            @for $i from 1 through $col-no {
                .grid__column--#{$breakpoint}-#{$i} {@include span($i of $col-no)}
            }

            @for $i from 1 through ($col-no) - 1 {
                .grid__column--#{$breakpoint}-skip-#{$i} {
                    @include push($i of $col-no);
                }

                // reset skip
                .grid__column--#{$breakpoint}-skip-0 {
                    margin-left: 0;
                }
            }

            .grid__column--#{$breakpoint}-last {
                float: right;
                margin-right: 0;
            }
        }
    }
}